stages:
  - preprocess
  - deploy

preprocess:
  image: python:latest
  stage: preprocess
  script:
    - python --version
    - repo=$(cat $TRIGGER_PAYLOAD | python -mjson.tool | python -c "import sys, json; print(json.load(sys.stdin)['event_data']['repository']['name'])")
    - tag=$(cat $TRIGGER_PAYLOAD | python -mjson.tool | python -c "import sys, json; print(json.load(sys.stdin)['event_data']['resources'][0]['tag'])")
    - ulr=$(cat $TRIGGER_PAYLOAD | python -mjson.tool | python -c "import sys, json; print(json.load(sys.stdin)['event_data']['resources'][0]['resource_url'])")
    - echo "$repo" >> repo.txt
    - echo "$url" >> url.txt
    - echo "$tag" >> tag.txt
  artifacts:
    paths:
      - repo.txt
      - url.txt
      - tag.txt

deploy:
  dependencies:
    - preprocess
  variables:
    TAG: $(cat tag.txt)
  rules:
    - if: $TAG != 'latest'
      when: never
  image: bitnami/kubectl:latest
  stage: deploy
  only:
    - master
  script:
    - depl="$(cat repo.txt)-deployment.yml"
    - service="$(cat repo.txt)-service.yml"
    - kubectl apply -f k8s/"$service"
    - kubectl apply -f k8s/"$depl"
    - kubectl set image deployment.v1.apps/"$(cat repo.txt)" "$(cat repo.txt)"="$(cat url.txt)"
    #- kubectl patch deployment "$(cat repo.txt)" -p '{"spec":{"template":{"metadata":{"labels":{"CI_PIPELINE_ID":"'$CI_PIPELINE_ID'"}}}}}'
