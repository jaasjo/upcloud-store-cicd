stages:
  - preprocess
  - deploy

preprocess:
  tags:
    - tkgs
  image: python:latest
  stage: preprocess
  script:
    - python --version
    - repo=$(cat $TRIGGER_PAYLOAD | python -mjson.tool | python -c "import sys, json; print(json.load(sys.stdin)['event_data']['repository']['name'])")
    - tag=$(cat $TRIGGER_PAYLOAD | python -mjson.tool | python -c "import sys, json; print(json.load(sys.stdin)['event_data']['resources'][0]['tag'])")
    - url=$(cat $TRIGGER_PAYLOAD | python -mjson.tool | python -c "import sys, json; print(json.load(sys.stdin)['event_data']['resources'][0]['resource_url'])")
    - echo "TAG=$tag" >> preprocess.env
    - echo "REPO=$repo" >> preprocess.env
    - echo "URL=$url" >> preprocess.env
  artifacts:
    reports:
      dotenv: preprocess.env

deploy:
  environment:
    name: qa
    kubernetes:
      namespace: tanzustore
  tags:
    - tkgs
  dependencies:
    - preprocess
  image: bitnami/kubectl:latest
  stage: deploy
  script:
    - '[ "$TAG" == "latest" ] && exit 0'
    - kubectl apply -f k8s/"$REPO-service.yml"
    - kubectl apply -f k8s/"$REPO-deployment.yml"
    - kubectl set image deployment.v1.apps/"$REPO" "$REPO"="$URL"
    #- kubectl patch deployment "$(cat repo.txt)" -p '{"spec":{"template":{"metadata":{"labels":{"CI_PIPELINE_ID":"'$CI_PIPELINE_ID'"}}}}}'
